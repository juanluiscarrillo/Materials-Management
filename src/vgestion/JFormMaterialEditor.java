/*
 * JFormMaterialEditor.java
 *
 * Created on 12 de enero de 2008, 20:30
 */

package vgestion;

import java.sql.*;

/**
 *
 * @author  Juan Luis
 */
public class JFormMaterialEditor extends javax.swing.JDialog {
    private Material material;
    private Connection connection;
    private boolean newMaterial;
    private boolean canceled;

    public boolean isCanceled() {
        return canceled;
    }
    
    /** Creates new form JFormMaterialEditor */
    
    public JFormMaterialEditor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        newMaterial = true;
        material = new Material();
        canceled = false;
        initComponents();
    }

    public Connection getConnection() {
        return connection;
    }

    public void setConnection(Connection connection) {
        this.connection = connection;
    }
    
    public void setId_proveedor(String id_proveedor) {
        jtfIdproveedor.setText(id_proveedor);
        jtfIdproveedor.setEditable(false);
    }
    
    public void setId_material(String id_material) {
        jtfIdmaterial.setText(id_material);
        jtfIdmaterial.setEditable(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jlIdmaterial = new javax.swing.JLabel();
        jtfIdmaterial = new javax.swing.JTextField();
        jlIdproveedor = new javax.swing.JLabel();
        jtfIdproveedor = new javax.swing.JTextField();
        jlMarca = new javax.swing.JLabel();
        jtfMarca = new javax.swing.JTextField();
        jlRefMarca = new javax.swing.JLabel();
        jtfRefMarca = new javax.swing.JTextField();
        jlDescripcion = new javax.swing.JLabel();
        jtfDescripcion = new javax.swing.JTextField();
        jlCategoria = new javax.swing.JLabel();
        jtfCategoria = new javax.swing.JTextField();
        jlPrecio = new javax.swing.JLabel();
        jtfPrecio = new javax.swing.JTextField();
        jlDescuento = new javax.swing.JLabel();
        jtfDescuento = new javax.swing.JTextField();
        jlRaee = new javax.swing.JLabel();
        jtfRaee = new javax.swing.JTextField();
        jlNeto = new javax.swing.JLabel();
        jtfNeto = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jbAceptar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Editor de materiales");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Material"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jlIdmaterial.setText("Id Material");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlIdmaterial, gridBagConstraints);

        jtfIdmaterial.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfIdmaterial.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfIdmaterial, gridBagConstraints);

        jlIdproveedor.setText("Id Proveedor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlIdproveedor, gridBagConstraints);

        jtfIdproveedor.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfIdproveedor.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfIdproveedor, gridBagConstraints);

        jlMarca.setText("Marca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlMarca, gridBagConstraints);

        jtfMarca.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfMarca.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfMarca, gridBagConstraints);

        jlRefMarca.setText("Ref Marca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlRefMarca, gridBagConstraints);

        jtfRefMarca.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfRefMarca.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfRefMarca, gridBagConstraints);

        jlDescripcion.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlDescripcion, gridBagConstraints);

        jtfDescripcion.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfDescripcion.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfDescripcion, gridBagConstraints);

        jlCategoria.setText("Categoria");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlCategoria, gridBagConstraints);

        jtfCategoria.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfCategoria.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfCategoria, gridBagConstraints);

        jlPrecio.setText("Precio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlPrecio, gridBagConstraints);

        jtfPrecio.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfPrecio.setPreferredSize(new java.awt.Dimension(400, 20));
        jtfPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPrecioActionPerformed(evt);
            }
        });
        jtfPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPrecioFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfPrecio, gridBagConstraints);

        jlDescuento.setText("Descuento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlDescuento, gridBagConstraints);

        jtfDescuento.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfDescuento.setPreferredSize(new java.awt.Dimension(400, 20));
        jtfDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescuentoActionPerformed(evt);
            }
        });
        jtfDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescuentoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfDescuento, gridBagConstraints);

        jlRaee.setText("Raee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlRaee, gridBagConstraints);

        jtfRaee.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfRaee.setPreferredSize(new java.awt.Dimension(400, 20));
        jtfRaee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfRaeeActionPerformed(evt);
            }
        });
        jtfRaee.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfRaeeFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfRaee, gridBagConstraints);

        jlNeto.setText("Neto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jlNeto, gridBagConstraints);

        jtfNeto.setEnabled(false);
        jtfNeto.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfNeto.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jtfNeto, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jbAceptar.setText("Aceptar");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });
        jPanel2.add(jbAceptar);

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(jbCancelar);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed
        String sql;
        Statement statement ;
        ResultSet resultSet;
        
        
        sql = "SELECT * FROM PROVEEDOR WHERE ID_PROVEEDOR = '" +
              jtfIdproveedor.getText().trim() +
              "';";
        
        try {
            statement = this.connection.createStatement();
            resultSet = statement.executeQuery(sql);
            if(!resultSet.next()) {
                javax.swing.JOptionPane.showMessageDialog(this,"Proveedor no encontrado");
                return;
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,"Database error");
            return;
        }
        
        if(jtfIdmaterial.getText().trim().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this,"Id de material incorrecto");
            return;
        }
        
        if(jtfDescripcion.getText().trim().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this,"Descripción de material incorrecto");
            return;
        }
        
        if(newMaterial) {
            sql = "SELECT * FROM MATERIAL WHERE ID_PROVEEDOR = '" +
                  jtfIdproveedor.getText().trim() +
                  "' AND ID_MATERIAL = '" +
                  jtfIdmaterial.getText().trim() +
                  "';";
            try {
                statement = this.connection.createStatement();
                resultSet = statement.executeQuery(sql);
                if(resultSet.next()) {
                    javax.swing.JOptionPane.showMessageDialog(this,"Id de material incorrecto");
                    return;
                }
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this,"Database error");
                e.printStackTrace();
                return;
            }
        } else {
            sql = "DELETE FROM MATERIAL WHERE ID_PROVEEDOR = '" +
                  material.getId_proveedor() +
                  "' AND ID_MATERIAL = '" +
                  material.getId_material() +
                  "';";
            try {
                statement = this.connection.createStatement();
                statement.executeUpdate(sql);
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this,"Database error");
                e.printStackTrace();
                return;
            }
        }
        
        material = new Material();
        material.setId_material(this.jtfIdmaterial.getText().trim());
        material.setId_proveedor(this.jtfIdproveedor.getText().trim());
        material.setCategoria(this.jtfCategoria.getText().trim());
        material.setMarca(this.jtfMarca.getText().trim());
        material.setRef_marca(this.jtfRefMarca.getText().trim());
        material.setDescripcion(this.jtfDescripcion.getText().trim());
        material.setPrecio(getPrecio());
        material.setDescuento(getDescuento());
        material.setRaee(getRaee());
        
        sql =  "INSERT INTO MATERIAL (ID_MATERIAL, ID_PROVEEDOR,";
        sql += " CATEGORIA,";
        sql += " MARCA,";
        sql += " REF_MARCA,";
        
        sql += " DESCRIPCION,";
        sql += " PRECIO,";
        sql += " DESCUENTO,";
        
        sql += " RAEE) VALUES (" +
              "'" + material.getId_material() +
              "' , '" + material.getId_proveedor();
        sql += "' , '" + material.getCategoria();
        sql += "' , '" + material.getMarca();
        sql += "' , '" + material.getRef_marca();      
        sql += "' , '" + material.getDescripcion();                
        sql += "' ," + material.getPrecio();
        sql += " ," + material.getDescuento();
        sql += " ," + material.getRaee();
        sql += ");";
        
        try {
            statement = this.connection.createStatement();
            if(statement.executeUpdate(sql)<0) {
                javax.swing.JOptionPane.showMessageDialog(this,"No insertado");
//                System.out.println(sql);
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,"Database error 2");
//            System.out.println(sql);
            return;
        }
        
        this.dispose();
    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        material = null;
        canceled = true;
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtfPrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPrecioFocusLost
        verificarPrecio();
        calcularNeto();
    }//GEN-LAST:event_jtfPrecioFocusLost

    private void jtfPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPrecioActionPerformed
        verificarPrecio();
        calcularNeto();
    }//GEN-LAST:event_jtfPrecioActionPerformed

    private void jtfDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescuentoActionPerformed
        verificarDescuento();
        calcularNeto();
    }//GEN-LAST:event_jtfDescuentoActionPerformed

    private void jtfDescuentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescuentoFocusLost
        verificarDescuento();
        calcularNeto();
    }//GEN-LAST:event_jtfDescuentoFocusLost

    private void jtfRaeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfRaeeActionPerformed
        verificarRaee();
        calcularNeto();
    }//GEN-LAST:event_jtfRaeeActionPerformed

    private void jtfRaeeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfRaeeFocusLost
        verificarRaee();
        calcularNeto();
    }//GEN-LAST:event_jtfRaeeFocusLost
    
    private void calcularNeto() {
        double neto;
        
        neto = getPrecio() * (1-getDescuento()/100.0) + getRaee();
        
        jtfNeto.setText(String.valueOf(UtilGestion.round(neto)));
    }
    
    public double getPrecio() {
        String temp;
        
        temp = jtfPrecio.getText().trim();
        if(temp.equals(""))
            return 0;
        else 
            return Double.parseDouble(temp);
    }
    
    public double getDescuento() {
        String temp;
        
        temp = jtfDescuento.getText().trim();
        if(temp.equals(""))
            return 0;
        else 
            return Double.parseDouble(temp);
    }
    
    public double getRaee() {
        String temp;
        
        temp = jtfRaee.getText().trim();
        if(temp.equals(""))
            return 0;
        else 
            return Double.parseDouble(temp);
    }
    
    private void verificarPrecio() {
        String temp;
        double precio;
        
        temp = jtfPrecio.getText().trim();
        if(temp.equals(""))
            material.setPrecio(0);
        else {
            try {
                precio = Double.parseDouble(temp);
                material.setPrecio(precio);
            } catch (Exception e) {
                javax.swing.JOptionPane.showConfirmDialog(this, "Precio incorrecto: "+temp);
                jtfPrecio.setText(""+material.getPrecio());
            }
        }
    }
    
    private void verificarDescuento() {
        String temp;
        double descuento;
        
        temp = jtfDescuento.getText().trim();
        if(temp.equals(""))
            material.setDescuento(0);
        else {
            try {
                descuento = Double.parseDouble(temp);
                material.setDescuento(descuento);
            } catch (Exception e) {
                javax.swing.JOptionPane.showConfirmDialog(this, "Descuento incorrecto: "+temp);
                jtfDescuento.setText(""+material.getDescuento());
            }
        }
    }
    
    private void verificarRaee() {
        String temp;
        double raee;
        
        temp = jtfRaee.getText().trim();
        if(temp.equals(""))
            material.setRaee(0);
        else {
            try {
                raee = Double.parseDouble(temp);
                material.setRaee(raee);
            } catch (Exception e) {
                javax.swing.JOptionPane.showConfirmDialog(this, "Raee incorrecto: "+temp);
                jtfRaee.setText(""+material.getRaee());
            }
        }
    }
    
    public double getNeto(){
        String temp;
        
        temp = jtfNeto.getText().trim();
        if(temp.equals(""))
            return 0;
        else
            return Double.parseDouble(temp);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFormMaterialEditor dialog = new JFormMaterialEditor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    public Material getMaterial() {
        return this.material;
    }
    
    public void setMaterial(Material material) {
        this.material = material;
        jtfIdmaterial.setText(material.getId_material());
        jtfIdproveedor.setText(material.getId_proveedor());
        jtfCategoria.setText(material.getCategoria());
        jtfDescripcion.setText(material.getDescripcion());
        jtfMarca.setText(material.getMarca());
        jtfRefMarca.setText(material.getRef_marca());
        jtfPrecio.setText(String.valueOf(material.getPrecio()));
        jtfDescuento.setText(String.valueOf(material.getDescuento()));
        jtfRaee.setText(String.valueOf(material.getRaee()));
        jtfNeto.setText(String.valueOf(material.getNeto()));
        jtfIdmaterial.setEditable(false);
        
        newMaterial = false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JLabel jlCategoria;
    private javax.swing.JLabel jlDescripcion;
    private javax.swing.JLabel jlDescuento;
    private javax.swing.JLabel jlIdmaterial;
    private javax.swing.JLabel jlIdproveedor;
    private javax.swing.JLabel jlMarca;
    private javax.swing.JLabel jlNeto;
    private javax.swing.JLabel jlPrecio;
    private javax.swing.JLabel jlRaee;
    private javax.swing.JLabel jlRefMarca;
    private javax.swing.JTextField jtfCategoria;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JTextField jtfDescuento;
    private javax.swing.JTextField jtfIdmaterial;
    private javax.swing.JTextField jtfIdproveedor;
    private javax.swing.JTextField jtfMarca;
    private javax.swing.JTextField jtfNeto;
    private javax.swing.JTextField jtfPrecio;
    private javax.swing.JTextField jtfRaee;
    private javax.swing.JTextField jtfRefMarca;
    // End of variables declaration//GEN-END:variables
    
}
