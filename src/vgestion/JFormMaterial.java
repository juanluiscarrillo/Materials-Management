/*
 * JFormMaterial.java
 *
 * Created on 11 de enero de 2008, 0:00
 */

package vgestion;

import javax.swing.table.TableColumnModel;
import java.sql.*;

/**
 *
 * @author  Juan Luis
 */
public class JFormMaterial extends javax.swing.JDialog {
    private java.awt.Frame parent;
    private MaterialTableModel materialTableModel;
    private Connection connection;

    public Connection getConnection() {
        return connection;
    }

    public void setConnection(Connection connection) {
        this.connection = connection;
    }
    /** Creates new form JFormMaterial */
    public JFormMaterial(java.awt.Frame parent, boolean modal) {
        super(parent,modal);
        this.parent = parent;
        materialTableModel = new MaterialTableModel();
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlIdmaterial = new javax.swing.JLabel();
        jtfIdmaterial = new javax.swing.JTextField();
        jlIdproveedor = new javax.swing.JLabel();
        jtfIdproveedor = new javax.swing.JTextField();
        jlMarca = new javax.swing.JLabel();
        jtfMarca = new javax.swing.JTextField();
        jlRefMarca = new javax.swing.JLabel();
        jtfRefMarca = new javax.swing.JTextField();
        jlDescripcion = new javax.swing.JLabel();
        jtfDescripcion = new javax.swing.JTextField();
        jlCategoria = new javax.swing.JLabel();
        jtfCategoria = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbCompararPrecios = new javax.swing.JButton();
        jbSustituir = new javax.swing.JButton();
        jSPMaterial = new javax.swing.JScrollPane();
        jTMaterial = new javax.swing.JTable();

        setTitle("Materiales");
        setMinimumSize(new java.awt.Dimension(1000, 600));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jlIdmaterial.setText("Id Material");

        jtfIdmaterial.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfIdmaterial.setPreferredSize(new java.awt.Dimension(400, 20));

        jlIdproveedor.setText("Id Proveedor");

        jtfIdproveedor.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfIdproveedor.setPreferredSize(new java.awt.Dimension(400, 20));

        jlMarca.setText("Marca");

        jtfMarca.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfMarca.setPreferredSize(new java.awt.Dimension(400, 20));

        jlRefMarca.setText("Ref Marca");

        jtfRefMarca.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfRefMarca.setPreferredSize(new java.awt.Dimension(400, 20));

        jlDescripcion.setText("Descripcion");

        jtfDescripcion.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfDescripcion.setPreferredSize(new java.awt.Dimension(400, 20));

        jlCategoria.setText("Categoria");

        jtfCategoria.setMinimumSize(new java.awt.Dimension(400, 20));
        jtfCategoria.setPreferredSize(new java.awt.Dimension(400, 20));

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbCompararPrecios.setText("Comparar precios");
        jbCompararPrecios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCompararPreciosActionPerformed(evt);
            }
        });

        jbSustituir.setText("Sustituir");
        jbSustituir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSustituirActionPerformed(evt);
            }
        });

        jTMaterial.setAutoCreateRowSorter(true);
        jTMaterial.setModel(materialTableModel);
        jTMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTMaterialMouseClicked(evt);
            }
        });
        jTMaterial.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTMaterialInputMethodTextChanged(evt);
            }
        });
        jSPMaterial.setViewportView(jTMaterial);
        //jTMaterial.getColumnModel().getColumn(0).setWidth(1);
        //jTMaterial.getColumnModel().getColumn(1).setWidth(1);
        //jTMaterial.getColumnModel().getColumn(2).setWidth(1);
        //jTMaterial.getColumnModel().getColumn(3).setWidth(1000);
        //jTMaterial.updateUI();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jSPMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(jbEditar)
                .addGap(18, 18, 18)
                .addComponent(jtfRefMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jbEliminar)
                .addContainerGap(389, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addComponent(jbSustituir)
                .addGap(418, 418, 418))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jlIdmaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jtfIdmaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jlIdproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jlMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jtfMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jlRefMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jlDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jlCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jtfCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jbBuscar)
                    .addGap(5, 5, 5)
                    .addComponent(jbNuevo)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(32, Short.MAX_VALUE)
                    .addComponent(jtfIdproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(257, 257, 257)
                    .addComponent(jbCompararPrecios)
                    .addContainerGap(258, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jSPMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtfRefMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSustituir)))
                .addGap(36, 36, 36)
                .addComponent(jbEliminar)
                .addGap(114, 114, 114))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jlIdmaterial))
                        .addComponent(jtfIdmaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addComponent(jlIdproveedor)
                    .addGap(2, 2, 2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jlMarca))
                        .addComponent(jtfMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addComponent(jlRefMarca)
                    .addGap(3, 3, 3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jlDescripcion))
                        .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jlCategoria))
                        .addComponent(jtfCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(208, 208, 208)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbBuscar)
                        .addComponent(jbNuevo))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(151, 151, 151)
                    .addComponent(jtfIdproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(229, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addComponent(jbCompararPrecios)
                    .addContainerGap(189, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        int locX, locY, sizeX, sizeY;
        sizeX = 300;
        sizeY = 20;
        this.jlIdmaterial.setSize(sizeX, sizeY);
        this.jlIdproveedor.setSize(sizeX, sizeY);
        this.jlCategoria.setSize(sizeX, sizeY);
        this.jlMarca.setSize(sizeX, sizeY);
        this.jlRefMarca.setSize(sizeX, sizeY);
        this.jlDescripcion.setSize(sizeX, sizeY);
        
        this.jtfIdmaterial.setSize(sizeX, sizeY);
        this.jtfIdproveedor.setSize(sizeX, sizeY);
        this.jtfCategoria.setSize(sizeX, sizeY);
        this.jtfMarca.setSize(sizeX, sizeY);
        this.jtfRefMarca.setSize(sizeX, sizeY);
        this.jtfDescripcion.setSize(sizeX, sizeY);
        
        locX = 10;
        locY = 10;
        this.jlIdmaterial.setLocation(locX, locY);
        locY+=this.jlIdmaterial.getHeight();
        this.jlIdproveedor.setLocation(locX, locY);
        locY+=this.jlIdproveedor.getHeight();
        this.jlCategoria.setLocation(locX, locY);
        locY+=this.jlCategoria.getHeight();
        this.jlMarca.setLocation(locX, locY);
        locY+=this.jlMarca.getHeight();
        this.jlRefMarca.setLocation(locX, locY);
        locY+=this.jlRefMarca.getHeight();
        this.jlDescripcion.setLocation(locX, locY);
        locY+=this.jlDescripcion.getHeight();
        locY+=10;
        this.jbNuevo.setLocation(locX, locY);
        locY+=this.jbNuevo.getHeight();
        
        
        locX = jlDescripcion.getLocation().x + jlDescripcion.getPreferredSize().width + 10;
        locY = 10;
        this.jtfIdmaterial.setLocation(locX, locY);
        locY+=this.jtfIdmaterial.getHeight();
        this.jtfIdproveedor.setLocation(locX, locY);
        locY+=this.jtfIdproveedor.getHeight();
        this.jtfCategoria.setLocation(locX, locY);
        locY+=this.jtfCategoria.getHeight();
        this.jtfMarca.setLocation(locX, locY);
        locY+=this.jtfMarca.getHeight();
        this.jtfRefMarca.setLocation(locX, locY);
        locY+=this.jtfRefMarca.getHeight();
        this.jtfDescripcion.setLocation(locX, locY);
        locY+=this.jtfDescripcion.getHeight();
        locY+=10;
        locX = jbNuevo.getLocation().x + jbNuevo.getWidth() + 10;
        this.jbBuscar.setLocation(locX, locY);
        locX = jbBuscar.getLocation().x + jbBuscar.getWidth() + 10;
        this.jbEditar.setLocation(locX, locY);
        locX = jbEditar.getLocation().x + jbEditar.getWidth() + 10;
        this.jbEliminar.setLocation(locX, locY);
        locX = jbEliminar.getLocation().x + jbEliminar.getWidth() + 10;
        this.jbCompararPrecios.setLocation(locX, locY);
        locX = jbCompararPrecios.getLocation().x + jbCompararPrecios.getWidth() + 10;
        this.jbSustituir.setLocation(locX, locY);
        locY+=this.jbSustituir.getHeight();
        
        
        locX=10;
        locY+=10;
        this.jSPMaterial.setLocation(locX, locY);
        this.jSPMaterial.setSize(this.getWidth()-2*locX,this.getHeight()-locY-40);
        this.jTMaterial.getColumnModel().getColumn(0).setPreferredWidth(100);
        this.jTMaterial.getColumnModel().getColumn(1).setPreferredWidth(100);
        this.jTMaterial.getColumnModel().getColumn(2).setPreferredWidth(100);
        this.jTMaterial.getColumnModel().getColumn(3).setPreferredWidth(100);
        this.jTMaterial.getColumnModel().getColumn(4).setPreferredWidth(100);
        this.jTMaterial.getColumnModel().getColumn(5).setPreferredWidth(this.getWidth()-500);
        this.jTMaterial.getColumnModel().getColumn(0).sizeWidthToFit();
        
       
        
//        this.jBNuevo.setLocation(this.getWidth()/2-this.jBNuevo.getWidth(), 0);
    }//GEN-LAST:event_formComponentResized

    private void jTMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTMaterialMouseClicked
//        this.jTMaterial.getCellEditor(WIDTH, WIDTH);
//        System.out.println(this.jTMaterial.columnAtPoint(evt.getPoint()));
    }//GEN-LAST:event_jTMaterialMouseClicked

    private void jTMaterialInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTMaterialInputMethodTextChanged
//        System.out.println("");
    }//GEN-LAST:event_jTMaterialInputMethodTextChanged

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        JFormMaterialEditor jFormMaterialEditor = new JFormMaterialEditor(parent,true);
        jFormMaterialEditor.setConnection(connection);
        jFormMaterialEditor.setVisible(true);
        this.materialTableModel.addMaterial(jFormMaterialEditor.getMaterial());
        buscar();
}//GEN-LAST:event_jbNuevoActionPerformed

    private Material getMaterial(String id_material, String id_proveedor) {
        String sql;
        Statement statement;
        ResultSet resultSet;
        Material material;
        
        material = null;
        
        sql = "SELECT * FROM MATERIAL WHERE ID_MATERIAL ='";
        sql += id_material;
        sql += "' AND ID_PROVEEDOR ='";
        sql += id_proveedor;
        sql += "';";
        
        try {
            statement = this.connection.createStatement();
            resultSet = statement.executeQuery(sql);
            if(resultSet.next()) {
                material = new Material();
                material.setId_material(resultSet.getString("ID_MATERIAL"));
                material.setId_proveedor(resultSet.getString("ID_PROVEEDOR"));
                material.setCategoria(resultSet.getString("CATEGORIA"));
                material.setMarca(resultSet.getString("MARCA"));
                material.setRef_marca(resultSet.getString("REF_MARCA"));
                material.setDescripcion(resultSet.getString("DESCRIPCION"));
                material.setPrecio(resultSet.getDouble("PRECIO"));
                material.setDescuento(resultSet.getDouble("DESCUENTO"));
                material.setRaee(resultSet.getDouble("RAEE"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return material;
    }
    
    
    private void buscar() {
        String sql;
        Statement statement;
        ResultSet resultSet;
        Material material;
        int cont;
        
        material = new Material();
        material.setId_material(this.jtfIdmaterial.getText().trim());
        material.setId_proveedor(this.jtfIdproveedor.getText().trim());
        material.setCategoria(this.jtfCategoria.getText().trim());
        material.setDescripcion(this.jtfDescripcion.getText().trim());
        material.setMarca(this.jtfMarca.getText().trim());
        material.setRef_marca(this.jtfRefMarca.getText().trim());
        
        if(material.isEmpty())
            sql = "SELECT * FROM MATERIAL";
        else {
            sql = "SELECT * FROM MATERIAL WHERE ";
            cont = 0;
            if(!material.getDescripcion().equals("")) {
                if(cont > 0) 
                    sql += " AND ";
                sql += "DESCRIPCION LIKE '%" + material.getDescripcion() + "%'";
                cont++;
            }
            
            if(!material.getCategoria().equals("")) {
                if(cont > 0) 
                    sql += " AND ";
                sql += "CATEGORIA LIKE '%" + material.getCategoria() + "%'";
                cont++;
            }
            
            if(!material.getId_material().equals("")) {
                if(cont > 0) 
                    sql += " AND ";
                sql += "ID_MATERIAL LIKE '%" + material.getId_material() + "%'";
                cont++;
            }
            
            if(!material.getId_proveedor().equals("")) {
                if(cont > 0) 
                    sql += " AND ";
                sql += "ID_PROVEEDOR LIKE '%" + material.getId_proveedor() + "%'";
                cont++;
            }
            
            if(!material.getMarca().equals("")) {
                if(cont > 0) 
                    sql += " AND ";
                sql += "MARCA LIKE '%" + material.getMarca() + "%'";
                cont++;
            }
            
            if(!material.getRef_marca().equals("")) {
                if(cont > 0) 
                    sql += " AND ";
                sql += "REF_MARCA LIKE '%" + material.getRef_marca() + "%'";
                cont++;
            }
            
            sql += ";";
        }
        
//        System.out.println(sql);
        
        try {
        statement = this.connection.createStatement();
        resultSet = statement.executeQuery(sql);
        this.materialTableModel.clearTable();
        while (resultSet.next()) {
            material = new Material();
            material.setId_material(resultSet.getString("ID_MATERIAL"));
            material.setId_proveedor(resultSet.getString("ID_PROVEEDOR"));
            material.setCategoria(resultSet.getString("CATEGORIA"));
            material.setMarca(resultSet.getString("MARCA"));
            material.setRef_marca(resultSet.getString("REF_MARCA"));
            material.setDescripcion(resultSet.getString("DESCRIPCION"));
            this.materialTableModel.addMaterial(material);
        }
        } catch (Exception e) {
//            System.out.println(sql);
            e.printStackTrace();
        }
        this.jTMaterial.updateUI();
    }
    
    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        int row;
        Material material;
        JFormMaterialEditor jFormMaterialEditor;
        
        row = jTMaterial.getSelectedRow();
        row = jTMaterial.convertRowIndexToModel(row);
        if(row<-1)
            return;
        
        material = materialTableModel.getMaterial(row);
        if(material==null || material.isEmpty()) {
            return;
        }
        
        material = getMaterial(material.getId_material(),material.getId_proveedor());
        
//        System.out.println("Precio: " + material.getPrecio());
        
        jFormMaterialEditor = new JFormMaterialEditor(null,true);
        jFormMaterialEditor.setConnection(connection);
        jFormMaterialEditor.setMaterial(material);
        jFormMaterialEditor.setVisible(true);
        
        buscar();
}//GEN-LAST:event_jbEditarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int row;
        String sql;
        Statement statement;
        ResultSet resultSet;
        Material material;
        
        row = jTMaterial.getSelectedRow();
        if(row<-1)
            return;
        
        material = materialTableModel.getMaterial(row);
        
        sql = "SELECT * FROM MATERIAL_ALBARAN WHERE ID_MATERIAL='" +
              material.getId_material() +
              "' AND ID_PROVEEDOR='" +
              material.getId_proveedor() +
              "';";
        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            if(resultSet.next()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Existen albaranes con este material");
                return;
            }
            sql = "DELETE FROM MATERIAL WHERE ID_MATERIAL='" +
                  material.getId_material() +
                  "' AND ID_PROVEEDOR='" +
                  material.getId_proveedor() +
                  "';";
            statement.executeUpdate(sql);
            buscar();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
}//GEN-LAST:event_jbEliminarActionPerformed

    private void jbCompararPreciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCompararPreciosActionPerformed
        JFormHistorialMaterial jFormHistorialMaterial;
        int row;
        String id_material, id_proveedor;
        
        row = jTMaterial.getSelectedRow();
        row = jTMaterial.convertRowIndexToModel(row);
        
        if(row<0)
            return;
        
        id_material = (String)materialTableModel.getValueAt(row, 0);
        id_material = id_material.trim();
        id_proveedor = (String)materialTableModel.getValueAt(row, 1);
        id_proveedor = id_proveedor.trim();
        if(id_material.equals("") || id_proveedor.equals(""))
            return;
        
        jFormHistorialMaterial = new JFormHistorialMaterial(null,true);
        jFormHistorialMaterial.setConnection(connection);
        jFormHistorialMaterial.setMaterial(id_material, id_proveedor);
        jFormHistorialMaterial.setVisible(true);
    }//GEN-LAST:event_jbCompararPreciosActionPerformed

    private void jbSustituirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSustituirActionPerformed
        int row;
        Material material;
        JFormMaterialIdEditor jFormMaterialIdEditor;
        
        row = jTMaterial.getSelectedRow();
        if(row<0)
            return;
        row = jTMaterial.convertRowIndexToModel(row);
        if(row<-1)
            return;
        
        material = materialTableModel.getMaterial(row);
        if(material==null || material.isEmpty()) {
            return;
        }
        
        jFormMaterialIdEditor = new JFormMaterialIdEditor(null,true);
        jFormMaterialIdEditor.setConnection(connection);
        jFormMaterialIdEditor.setMaterial(material);
        jFormMaterialIdEditor.setVisible(true);
        
        buscar();
}//GEN-LAST:event_jbSustituirActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFormMaterial(null,true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jSPMaterial;
    private javax.swing.JTable jTMaterial;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCompararPrecios;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSustituir;
    private javax.swing.JLabel jlCategoria;
    private javax.swing.JLabel jlDescripcion;
    private javax.swing.JLabel jlIdmaterial;
    private javax.swing.JLabel jlIdproveedor;
    private javax.swing.JLabel jlMarca;
    private javax.swing.JLabel jlRefMarca;
    private javax.swing.JTextField jtfCategoria;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JTextField jtfIdmaterial;
    private javax.swing.JTextField jtfIdproveedor;
    private javax.swing.JTextField jtfMarca;
    private javax.swing.JTextField jtfRefMarca;
    // End of variables declaration//GEN-END:variables
    
}
